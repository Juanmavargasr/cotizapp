// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model basicdata {
  id      Int    @id @default(autoincrement())
  coldrolledprice Int
  stainlesssteelprice Int
  galvanizedsteelprice  Int
  paintprice  Int
  comercializedrentability  Float
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
}

model quotation {
  id      Int    @id @default(autoincrement())
  subtotalvaluequotation Int
  taxvaluequoatation Int
  finalvaluequotation Int
  products                   product[]
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
}

model product {
  id      Int    @id @default(autoincrement())
  name String
  subtotalvalueproduct Int
  taxvalueproduct Int
  finalvalueproduct Int
  quotationid              Int?
  quotation                quotation?               @relation(fields: [quotationid], references: [id])
  basicdataquotations basicdataquotation[]
  steelparts steelpart[]
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
}

model basicdataquotation {
  id      Int    @id @default(autoincrement())
  coldrolledprice Int
  stainlesssteelprice Int
  galvanizedsteelprice  Int
  paintprice  Int
  comercializedrentability  Float
  productid Int
  product product? @relation(fields: [productid], references: [id], onDelete: Cascade)
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
}

model steelpart {
  id Int  @id @default(autoincrement())
  partName String
  length Int
  width Int
  qty Int
  thickness String
  bend Int
  weight Int
  area Int
  productid Int
  product product? @relation(fields: [productid], references: [id], onDelete: Cascade)

}